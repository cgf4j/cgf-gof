单例模式实现的核心是：构造方法私有化，对象只实例化一次，提供一个静态方法获取对象。考虑防止反序列化，防止反射生成（这两种情况实际中基本不会出现，可以不用考虑）
本例中提供了几种方式的实现：
饿汉式
	特点： 
		1，类加载时实例化；
		2，线程安全；
		3，调用效率高；
		4，因为类加载时就创建，如果始终没有使用的话会造成内存的浪费。
懒汉式
	特点：
		1，延迟加载在使用时才进行创建；
		2，资源利用率高；
		3，在高并发下会造成创建多个对象，因此需要使用同步锁将整个方法进行加锁，效率较低。
双重检查锁
	由于JVM的优化机制仅做参考，不能实际中使用。
静态内部类
	特点：
		结合了饿汉式与懒汉式的优点
枚举类
	